version: "3.7"
services:
  app:
    environment: 
      S3_LOCAL: "yes"
      S3_ACCESS_KEY_ID: ${S3_ID}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY}
      S3_REGION: ${S3_REGION}
    depends_on: 
      - s3
    cap_add:
    - NET_ADMIN
    sysctls:
    - net.ipv4.conf.all.route_localnet=1

  krill:
    environment:
      S3_LOCAL: "yes"
      S3_ACCESS_KEY_ID: ${S3_ID}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY}
      S3_REGION: ${S3_REGION}
    depends_on: 
      - s3
    cap_add:
      - NET_ADMIN
    sysctls:
      - net.ipv4.conf.all.route_localnet=1

  s3:
    image: minio/minio:edge
    volumes:
      - s3_data:/data
      - s3_config:/root/.minio
    command: server /data
    expose:
      - "9000"
    environment:
      MINIO_ACCESS_KEY: ${S3_ID}
      MINIO_SECRET_KEY: ${S3_SECRET_ACCESS_KEY}
      MINIO_REGION: ${S3_REGION}
    env_file: 
        - .env_files/production/timezone
    networks:
      - aquarium_net

  createbucket:
    image: minio/mc:RELEASE.2020-11-25T23-04-07Z
    depends_on:
      - s3
    entrypoint: >
      /bin/sh -c "
      while ! nc -z s3 9000; do
        sleep 1;
      done;
      sleep 1;
      /usr/bin/mc config host add aqminio http://s3:9000 ${S3_ID} ${S3_SECRET_ACCESS_KEY};
      /usr/bin/mc mb --region ${S3_REGION} -p aqminio/images;
      /usr/bin/mc policy set download aqminio/images;
      exit 0;
      "
    networks:
      - aquarium_net

volumes:
  s3_data:
  s3_config:
