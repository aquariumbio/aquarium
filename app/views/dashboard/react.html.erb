<div id="react-content" class="react_container"></div>

<script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
<script type="text/babel">
    'use strict';

  const createElement = React.createElement;


  function TechDashTableTitle() {
    return (
      <div className="assigned_job_table_title fflex_resp tech_table_title">
        <div className="job-tecnician-name fflex_col" >JOB #</div>
        <div className="job-protocol fflex_col2 ">PROTOCOL</div>
        <div className="job-operations fflex_col "> OPERATIONS</div>
        <div className="job-assigned-time fflex_col "> CREATED</div>
        <div className="job-start-time fflex_col "> ASSIGNED</div>
      </div>
    )
  }

  function TechDashTableRow( key, job ) {
    let classNames = key === 0 ? "active-job fflex_resp fflex_row first_row" : "active-job fflex_resp fflex_row"
    
    return (
      <div key={key} className={`active-job fflex_resp fflex_row ${key === 0 ? "first_row" : ""}`} >
        <div className="job-id fflex_col" fflex_content="Job">
          <a href={`/jobs/${job.id}`} className="figma_blue"> {job.id}</a>
        </div>
        <div className="job-protocol fflex_col2" fflex_content="Protocol">
          <a className="figma_blue" href={`/jobs/${job.id}`} > {job.operation_type_name}</a>
        </div>
        <div className="job-operations fflex_col" fflex_content="Operations"> {job.operation_count}</div>
        <div className="job-created fflex_col" fflex_content="Created"> {job.created_at ? new Date(job.created_at).toLocaleString("en-US") : "-"}</div>
        <div className="job-assigned-time fflex_col" fflex_content="Assigned">{ job.assigend_at ? new Date(job.assigend_at).toLocaleString("en-US") : "-"}</div>
      </div>
    )
  }

  function ActiveJobsTable(jobs) {
    return (
      <div>
        {TechDashTableTitle()}
        <div className="tech_dash_table_content">
          { jobs.length > 0 ?
            jobs.map(function( job, i ) {
                return TechDashTableRow( i, job )
              }) :
            <h3>No jobs</h3>
          }
        </div>
      </div>
    )
  }

  class TechnicianDashboard extends React.Component {
    constructor(props) {
      super(props);
      this.state = { 
        isLoading: true,
        hasError: false,
        jobs: false,
        readyJobs: [],
        runningJobs: [],
        viewReadyJobs: true,
        viewRunningJobs: false,
      };

    this.getTechnicianDashboard = this.getTechnicianDashboard.bind(this);
    this.handleClick = this.handleClick.bind(this);
  }

  handleClick() {
    this.setState(state => ({
      viewReadyJobs: !state.viewReadyJobs,
      viewRunningJobs: !state.viewRunningJobs
    }));
  }
  

    componentDidMount() {
      this.getTechnicianDashboard()
    }

    static getDerivedStateFromError(error) {
      // Update state so the next render will show the fallback UI.
      return { hasError: true };
    }

    componentDidCatch(error, errorInfo) {
      console.log(error, errorInfo);
    }

    

    render() {
      if (this.state.hasError) {
        return <h1> Ooops... Something went wrong. Please try again.</h1>
      }

      if (this.state.isLoading) {
        return <h1>Loading active jobs...</h1>
      }

      return (
        <div className="tech_dashboard">
          <div className="left_nav"> 
            <div className="btn_block">
              <div className={`btn_cont ${ this.state.viewReadyJobs ? "disabled" : "" }`}> 
                <button id="ready_jobs_btn"
                        className="view_select_btn" 
                        onClick={this.handleClick} 
                        disabled={ this.state.viewReadyJobs }>
                    READY
                </button>
                <button className="jobs_count"
                        onClick={this.handleClick} 
                        disabled={ this.state.viewReadyJobs }>
                  {this.state.readyJobs.length}
                </button>
              </div>
              <div className={`btn_cont ${ this.state.viewRunningJobs ? "disabled" : "" }`}>
                  <button id="running_jobs_btn" 
                          className="view_select_btn"
                          onClick={this.handleClick} 
                          disabled={ this.state.viewRunningJobs}>
                    RUNNING
                  </button>
                  <button className="jobs_count"
                          onClick={this.handleClick} 
                          disabled={ this.state.viewReadyJobs }>
                    {this.state.runningJobs.length}
                  </button>
              </div>
            </div>
            <div className="page_title">Jobs</div>
          </div>

          { this.state.viewReadyJobs && ActiveJobsTable(this.state.readyJobs) }

          { this.state.viewRunningJobs && ActiveJobsTable(this.state.runningJobs) }
      
        </div>
      )
    }

  
    getTechnicianDashboard() {
      fetch('/api/v2/dashboard/my')
      .then(result => result.json())
      .then(
        (result) => {
          this.setState({
            isLoading: false,
            readyJobs: result.data.filter(job => job.pc === -1 ),
            runningJobs: result.data.filter(job => job.pc === 0 ),
          });
        },
        (error) => {
          console.log("error:" + JSON.stringify(error));
          this.setState({
            isLoading: false,
            error,
          });
        }
      )
    }
    
    
  }

  const domContainer = document.querySelector('#react-content');
  ReactDOM.render(<TechnicianDashboard/>, domContainer);
</script>