# typed: strong
# This is an autogenerated file for Rails routes.
# Please run rake rails_rbi:routes to regenerate.
class ActionController::Base
  include GeneratedUrlHelpers
end

module ActionView::Helpers
  include GeneratedUrlHelpers
end

module GeneratedUrlHelpers
  # Sigs for route /import(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def import_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def import_url(*args, **kwargs); end

  # Sigs for route /publish/check_repo(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publish_check_repo_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publish_check_repo_url(*args, **kwargs); end

  # Sigs for route /publish/publish(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publish_publish_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publish_publish_url(*args, **kwargs); end

  # Sigs for route /publish/export(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publish_export_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publish_export_url(*args, **kwargs); end

  # Sigs for route /publish(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publish_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publish_url(*args, **kwargs); end

  # Sigs for route /static_pages/explorer_jobs(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def static_pages_explorer_jobs_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def static_pages_explorer_jobs_url(*args, **kwargs); end

  # Sigs for route /static_pages/explorer(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def static_pages_explorer_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def static_pages_explorer_url(*args, **kwargs); end

  # Sigs for route /timings(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def timings_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def timings_url(*args, **kwargs); end

  # Sigs for route /timings/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def timing_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def timing_url(*args, **kwargs); end

  # Sigs for route /json/current(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def json_current_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def json_current_url(*args, **kwargs); end

  # Sigs for route /json/items(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def json_items_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def json_items_url(*args, **kwargs); end

  # Sigs for route /json/save(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def json_save_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def json_save_url(*args, **kwargs); end

  # Sigs for route /json/delete(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def json_delete_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def json_delete_url(*args, **kwargs); end

  # Sigs for route /json/upload(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def json_upload_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def json_upload_url(*args, **kwargs); end

  # Sigs for route /json(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def json_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def json_url(*args, **kwargs); end

  # Sigs for route /launcher/estimate(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def launcher_estimate_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def launcher_estimate_url(*args, **kwargs); end

  # Sigs for route /launcher/submit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def launcher_submit_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def launcher_submit_url(*args, **kwargs); end

  # Sigs for route /launcher/plans(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def launcher_plans_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def launcher_plans_url(*args, **kwargs); end

  # Sigs for route /launcher(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def launcher_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def launcher_url(*args, **kwargs); end

  # Sigs for route /plans/plan(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def plans_plan_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def plans_plan_url(*args, **kwargs); end

  # Sigs for route /plans/move(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def plans_move_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def plans_move_url(*args, **kwargs); end

  # Sigs for route /plans/folders(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def plans_folders_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def plans_folders_url(*args, **kwargs); end

  # Sigs for route /plans(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def plans_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def plans_url(*args, **kwargs); end

  # Sigs for route /plans/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_plan_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_plan_url(*args, **kwargs); end

  # Sigs for route /plans/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_plan_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_plan_url(*args, **kwargs); end

  # Sigs for route /plans/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def plan_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def plan_url(*args, **kwargs); end

  # Sigs for route /operations/manager_list(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def operations_manager_list_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def operations_manager_list_url(*args, **kwargs); end

  # Sigs for route /operations/step(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def operations_step_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def operations_step_url(*args, **kwargs); end

  # Sigs for route /operations/batch(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def operations_batch_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def operations_batch_url(*args, **kwargs); end

  # Sigs for route /operations/unbatch(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def operations_unbatch_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def operations_unbatch_url(*args, **kwargs); end

  # Sigs for route /operations/jobs(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def operations_jobs_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def operations_jobs_url(*args, **kwargs); end

  # Sigs for route /operations(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def operations_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def operations_url(*args, **kwargs); end

  # Sigs for route /operations/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_operation_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_operation_url(*args, **kwargs); end

  # Sigs for route /operations/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_operation_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_operation_url(*args, **kwargs); end

  # Sigs for route /operations/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def operation_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def operation_url(*args, **kwargs); end

  # Sigs for route /operation_types/test_all(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def operation_types_test_all_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def operation_types_test_all_url(*args, **kwargs); end

  # Sigs for route /operation_types/import(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def operation_types_import_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def operation_types_import_url(*args, **kwargs); end

  # Sigs for route /operation_types/deployed_with_timing(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def operation_types_deployed_with_timing_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def operation_types_deployed_with_timing_url(*args, **kwargs); end

  # Sigs for route /operation_types/default(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def default_operation_types_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def default_operation_types_url(*args, **kwargs); end

  # Sigs for route /operation_types/code(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def code_operation_types_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def code_operation_types_url(*args, **kwargs); end

  # Sigs for route /operation_types/test(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def test_operation_types_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def test_operation_types_url(*args, **kwargs); end

  # Sigs for route /operation_types(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def operation_types_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def operation_types_url(*args, **kwargs); end

  # Sigs for route /operation_types/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_operation_type_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_operation_type_url(*args, **kwargs); end

  # Sigs for route /operation_types/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_operation_type_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_operation_type_url(*args, **kwargs); end

  # Sigs for route /operation_types/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def operation_type_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def operation_type_url(*args, **kwargs); end

  # Sigs for route /libraries/code(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def code_libraries_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def code_libraries_url(*args, **kwargs); end

  # Sigs for route /libraries(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def libraries_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def libraries_url(*args, **kwargs); end

  # Sigs for route /libraries/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_library_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_library_url(*args, **kwargs); end

  # Sigs for route /libraries/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_library_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_library_url(*args, **kwargs); end

  # Sigs for route /libraries/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def library_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def library_url(*args, **kwargs); end

  # Sigs for route /announcements(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def announcements_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def announcements_url(*args, **kwargs); end

  # Sigs for route /announcements/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_announcement_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_announcement_url(*args, **kwargs); end

  # Sigs for route /announcements/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_announcement_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_announcement_url(*args, **kwargs); end

  # Sigs for route /announcements/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def announcement_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def announcement_url(*args, **kwargs); end

  # Sigs for route /developer(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def developer_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def developer_url(*args, **kwargs); end

  # Sigs for route /developer/get(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def developer_get_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def developer_get_url(*args, **kwargs); end

  # Sigs for route /developer/save(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def developer_save_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def developer_save_url(*args, **kwargs); end

  # Sigs for route /developer/test(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def developer_test_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def developer_test_url(*args, **kwargs); end

  # Sigs for route /developer/pull(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def developer_pull_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def developer_pull_url(*args, **kwargs); end

  # Sigs for route /browser(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def browser_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def browser_url(*args, **kwargs); end

  # Sigs for route /browser/all(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def browser_all_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def browser_all_url(*args, **kwargs); end

  # Sigs for route /browser/projects(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def browser_projects_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def browser_projects_url(*args, **kwargs); end

  # Sigs for route /browser/samples_for_tree(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def browser_samples_for_tree_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def browser_samples_for_tree_url(*args, **kwargs); end

  # Sigs for route /browser/create_samples(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def browser_create_samples_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def browser_create_samples_url(*args, **kwargs); end

  # Sigs for route /browser/save(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def browser_save_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def browser_save_url(*args, **kwargs); end

  # Sigs for route /browser/save_data_association(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def browser_save_data_association_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def browser_save_data_association_url(*args, **kwargs); end

  # Sigs for route /browser/search(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def browser_search_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def browser_search_url(*args, **kwargs); end

  # Sigs for route /parameters(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def parameters_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def parameters_url(*args, **kwargs); end

  # Sigs for route /parameters/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_parameter_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_parameter_url(*args, **kwargs); end

  # Sigs for route /parameters/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_parameter_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_parameter_url(*args, **kwargs); end

  # Sigs for route /parameters/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def parameter_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def parameter_url(*args, **kwargs); end

  # Sigs for route /budgets(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def budgets_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def budgets_url(*args, **kwargs); end

  # Sigs for route /budgets/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_budget_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_budget_url(*args, **kwargs); end

  # Sigs for route /budgets/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_budget_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_budget_url(*args, **kwargs); end

  # Sigs for route /budgets/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def budget_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def budget_url(*args, **kwargs); end

  # Sigs for route /invoices/note(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def invoices_note_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def invoices_note_url(*args, **kwargs); end

  # Sigs for route /invoices/credit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def invoices_credit_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def invoices_credit_url(*args, **kwargs); end

  # Sigs for route /invoices/change_budget(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def invoices_change_budget_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def invoices_change_budget_url(*args, **kwargs); end

  # Sigs for route /invoices(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def invoices_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def invoices_url(*args, **kwargs); end

  # Sigs for route /invoices/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_invoice_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_invoice_url(*args, **kwargs); end

  # Sigs for route /invoices/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_invoice_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_invoice_url(*args, **kwargs); end

  # Sigs for route /invoices/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def invoice_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def invoice_url(*args, **kwargs); end

  # Sigs for route /accounts(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def accounts_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def accounts_url(*args, **kwargs); end

  # Sigs for route /accounts/deposit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def accounts_deposit_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def accounts_deposit_url(*args, **kwargs); end

  # Sigs for route /containers_list(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def containers_list_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def containers_list_url(*args, **kwargs); end

  # Sigs for route /collection_containers_list(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def collection_containers_list_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def collection_containers_list_url(*args, **kwargs); end

  # Sigs for route /sample_types_list(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def sample_types_list_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def sample_types_list_url(*args, **kwargs); end

  # Sigs for route /sample_list(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def sample_list_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def sample_list_url(*args, **kwargs); end

  # Sigs for route /posts(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def posts_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def posts_url(*args, **kwargs); end

  # Sigs for route /wizards(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def wizards_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def wizards_url(*args, **kwargs); end

  # Sigs for route /wizards/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_wizard_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_wizard_url(*args, **kwargs); end

  # Sigs for route /wizards/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_wizard_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_wizard_url(*args, **kwargs); end

  # Sigs for route /wizards/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def wizard_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def wizard_url(*args, **kwargs); end

  # Sigs for route /item_list(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def item_list_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def item_list_url(*args, **kwargs); end

  # Sigs for route /upload(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def upload_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def upload_url(*args, **kwargs); end

  # Sigs for route /groups/names(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def groups_names_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def groups_names_url(*args, **kwargs); end

  # Sigs for route /groups(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def groups_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def groups_url(*args, **kwargs); end

  # Sigs for route /groups/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_group_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_group_url(*args, **kwargs); end

  # Sigs for route /groups/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_group_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_group_url(*args, **kwargs); end

  # Sigs for route /groups/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def group_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def group_url(*args, **kwargs); end

  # Sigs for route /collections/save_data_associations(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def collections_save_data_associations_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def collections_save_data_associations_url(*args, **kwargs); end

  # Sigs for route /samples(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def samples_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def samples_url(*args, **kwargs); end

  # Sigs for route /samples/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_sample_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_sample_url(*args, **kwargs); end

  # Sigs for route /samples/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_sample_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_sample_url(*args, **kwargs); end

  # Sigs for route /samples/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def sample_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def sample_url(*args, **kwargs); end

  # Sigs for route /sample_types(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def sample_types_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def sample_types_url(*args, **kwargs); end

  # Sigs for route /sample_types/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_sample_type_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_sample_type_url(*args, **kwargs); end

  # Sigs for route /sample_types/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_sample_type_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_sample_type_url(*args, **kwargs); end

  # Sigs for route /sample_types/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def sample_type_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def sample_type_url(*args, **kwargs); end

  # Sigs for route /spreadsheet(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def spreadsheet_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def spreadsheet_url(*args, **kwargs); end

  # Sigs for route /process_spreadsheet(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def process_spreadsheet_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def process_spreadsheet_url(*args, **kwargs); end

  # Sigs for route /krill/start(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def krill_start_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def krill_start_url(*args, **kwargs); end

  # Sigs for route /krill/continue(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def krill_continue_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def krill_continue_url(*args, **kwargs); end

  # Sigs for route /krill/log(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def krill_log_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def krill_log_url(*args, **kwargs); end

  # Sigs for route /krill/state(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def krill_state_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def krill_state_url(*args, **kwargs); end

  # Sigs for route /krill/next(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def krill_next_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def krill_next_url(*args, **kwargs); end

  # Sigs for route /krill/error(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def krill_error_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def krill_error_url(*args, **kwargs); end

  # Sigs for route /krill/inventory(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def krill_inventory_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def krill_inventory_url(*args, **kwargs); end

  # Sigs for route /krill/abort(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def krill_abort_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def krill_abort_url(*args, **kwargs); end

  # Sigs for route /krill/jobs(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def krill_jobs_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def krill_jobs_url(*args, **kwargs); end

  # Sigs for route /krill/upload(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def krill_upload_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def krill_upload_url(*args, **kwargs); end

  # Sigs for route /krill/uploads(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def krill_uploads_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def krill_uploads_url(*args, **kwargs); end

  # Sigs for route /krill/attach(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def krill_attach_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def krill_attach_url(*args, **kwargs); end

  # Sigs for route /jobs/index(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def jobs_index_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def jobs_index_url(*args, **kwargs); end

  # Sigs for route /jobs/summary(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def jobs_summary_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def jobs_summary_url(*args, **kwargs); end

  # Sigs for route /jobs/report(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def jobs_report_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def jobs_report_url(*args, **kwargs); end

  # Sigs for route /joblist(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def joblist_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def joblist_url(*args, **kwargs); end

  # Sigs for route /items(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def items_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def items_url(*args, **kwargs); end

  # Sigs for route /items/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_item_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_item_url(*args, **kwargs); end

  # Sigs for route /items/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_item_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_item_url(*args, **kwargs); end

  # Sigs for route /items/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def item_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def item_url(*args, **kwargs); end

  # Sigs for route /object_types/:object_type_id/items/update(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def object_type_items_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def object_type_items_url(*args, **kwargs); end

  # Sigs for route /object_types/:object_type_id/items/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_object_type_item_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_object_type_item_url(*args, **kwargs); end

  # Sigs for route /object_types/:object_type_id/items/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_object_type_item_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_object_type_item_url(*args, **kwargs); end

  # Sigs for route /object_types/:object_type_id/items/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def object_type_item_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def object_type_item_url(*args, **kwargs); end

  # Sigs for route /object_types(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def object_types_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def object_types_url(*args, **kwargs); end

  # Sigs for route /object_types/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_object_type_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_object_type_url(*args, **kwargs); end

  # Sigs for route /object_types/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_object_type_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_object_type_url(*args, **kwargs); end

  # Sigs for route /object_types/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def object_type_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def object_type_url(*args, **kwargs); end

  # Sigs for route /
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def root_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def root_url(*args, **kwargs); end

  # Sigs for route /template(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def template_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def template_url(*args, **kwargs); end

  # Sigs for route /test(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def test_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def test_url(*args, **kwargs); end

  # Sigs for route /signin(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def signin_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def signin_url(*args, **kwargs); end

  # Sigs for route /signout(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def signout_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def signout_url(*args, **kwargs); end

  # Sigs for route /dismiss(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def dismiss_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def dismiss_url(*args, **kwargs); end

  # Sigs for route /static_pages/direct_purchase(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def static_pages_direct_purchase_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def static_pages_direct_purchase_url(*args, **kwargs); end

  # Sigs for route /search(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def search_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def search_url(*args, **kwargs); end

  # Sigs for route /delete_inventory(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def delete_inventory_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def delete_inventory_url(*args, **kwargs); end

  # Sigs for route /signup(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def signup_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def signup_url(*args, **kwargs); end

  # Sigs for route /password(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def password_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def password_url(*args, **kwargs); end

  # Sigs for route /users/active(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def users_active_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def users_active_url(*args, **kwargs); end

  # Sigs for route /users/current(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def users_current_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def users_current_url(*args, **kwargs); end

  # Sigs for route /users/password(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def users_password_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def users_password_url(*args, **kwargs); end

  # Sigs for route /users/:user_id/change_password(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def user_change_password_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def user_change_password_url(*args, **kwargs); end

  # Sigs for route /users(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def users_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def users_url(*args, **kwargs); end

  # Sigs for route /users/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_user_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_user_url(*args, **kwargs); end

  # Sigs for route /users/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_user_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_user_url(*args, **kwargs); end

  # Sigs for route /users/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def user_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def user_url(*args, **kwargs); end

  # Sigs for route /sessions(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def sessions_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def sessions_url(*args, **kwargs); end

  # Sigs for route /sessions/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_session_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_session_url(*args, **kwargs); end

  # Sigs for route /sessions/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def session_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def session_url(*args, **kwargs); end

  # Sigs for route /jobs(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def jobs_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def jobs_url(*args, **kwargs); end

  # Sigs for route /jobs/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def job_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def job_url(*args, **kwargs); end

  # Sigs for route /logs(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def logs_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def logs_url(*args, **kwargs); end

  # Sigs for route /logs/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def log_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def log_url(*args, **kwargs); end

  # Sigs for route /logout(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def logout_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def logout_url(*args, **kwargs); end
end
