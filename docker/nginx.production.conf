upstream puma {
  server unix:/aquarium/shared/sockets/puma.sock fail_timeout=10;
}


upstream s3server {
    server s3:9000;
}

server {
  listen 80 default_server;
  server_name localhost;

  # define the public application root
  root   /aquarium/public;
  index  index.html;

  # how large of a request to allow; affects imports
  client_max_body_size 2M;

  # define where Nginx should write its logs
  access_log /aquarium/log/nginx.access.log;
  error_log /aquarium/log/nginx.error.log;

  # deny requests for files that should never be accessed
  location ~ /\. {
    deny all;
  }

  location ~* ^.+\.(rb|log)$ {
    deny all;
  }

  # serve static (compiled) assets directly if they exist (for rails production)
  location ~ ^/(assets|images|javascripts|stylesheets|swfs|system)/ {
    gzip_static on; # to serve pre-gzipped version

    expires max;
    add_header Cache-Control public;

    # Some browsers still send conditional-GET requests if there's a
    # Last-Modified header or an ETag header even if they haven't
    # reached the expiry date sent in the Expires header.
    add_header Last-Modified "";
    add_header ETag "";
    break;
  }

  # send non-static file requests to the app server
  location / {
    try_files $uri @rails;
  }

  location @rails {
    proxy_set_header  X-Real-IP  $remote_addr;
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://puma;
  }
}

# see https://docs.minio.io/docs/setup-nginx-proxy-with-minio
server {
    listen 9000 default_server;
    server_name s3;
    # To allow special characters in headers
    ignore_invalid_headers off;
    # Allow any size file to be uploaded.  
    # Set to a value such as 1000m; to restrict file size to a specific value
    client_max_body_size 0;
    # To disable buffering
    proxy_buffering off;
    location / {
        proxy_set_header Host $http_host;
        proxy_pass http://s3server/;
    }
}